// <auto-generated />
using System;
using LocacaoDeVeiculos.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LocacaoDeVeiculos.Migrations
{
    [DbContext(typeof(LocacaoDeVeiculosContext))]
    [Migration("20250111212418_tipo")]
    partial class tipo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LocacaoDeVeiculos.Models.Carro", b =>
                {
                    b.Property<string>("CarroId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Combustivel")
                        .HasColumnType("real");

                    b.Property<double>("Diaria")
                        .HasColumnType("float");

                    b.Property<bool>("Locado")
                        .HasColumnType("bit");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("CarroId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("LocacaoDeVeiculos.Models.Locacao", b =>
                {
                    b.Property<string>("LocacaoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CarroId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocadorCpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("LocacaoId");

                    b.HasIndex("CarroId");

                    b.HasIndex("LocadorCpf");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("LocacaoDeVeiculos.Models.Locador", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cpf");

                    b.ToTable("Locadores");
                });

            modelBuilder.Entity("LocacaoDeVeiculos.Models.Locacao", b =>
                {
                    b.HasOne("LocacaoDeVeiculos.Models.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocacaoDeVeiculos.Models.Locador", "Locador")
                        .WithMany("Locacoes")
                        .HasForeignKey("LocadorCpf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Locador");
                });

            modelBuilder.Entity("LocacaoDeVeiculos.Models.Locador", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
